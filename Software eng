{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyPG388ADiF+N/utlJ4Q/3X5",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/veganti1474/colab-programs/blob/main/Software%20eng\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "1LHf_XTasEN6",
        "outputId": "8cd8b7d1-bb65-4c71-e4ab-b6ddbb566c3d"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Multiple Inputs Read from File: [3, 5, 7], Sum = 15)\n"
          ]
        }
      ],
      "source": [
        "with open(\"multiple_inputs.txt\", \"w\") as f:\n",
        "  f.write(\"3\\n5\\n7\")\n",
        "try:\n",
        "    with open(\"multiple_inputs.txt\", \"r\") as f:\n",
        "      numbers = [int (line.strip()) for line in f.readlines()]\n",
        "      result = sum(numbers)\n",
        "      print(f\"Multiple Inputs Read from File: {numbers}, Sum = {result})\")\n",
        "except FileNotFoundError:\n",
        "        print(\"File not found!\")\n",
        "except ValueError:\n",
        "          print(\"Error in reading or converting the inputs!\")"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "with open(\"single_input.txt\", \"w\") as f:\n",
        "  f.write(\"42\")\n",
        "try:\n",
        "    with open(\"single_input.txt\", \"r\") as f:\n",
        "      num = int(f.read().strip())\n",
        "      result = num * 2\n",
        "      print(f\"Single Input Read from File: {num} * 2 = {result}\")\n",
        "except FileNotFoundError:\n",
        "        print(\"File not found!\")\n",
        "except ValueError:\n",
        "        print(\"Error in reading or converting the input!\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "H9E3LL7DtErx",
        "outputId": "32427d9a-99b4-49ed-8f99-ea8815d6f8ba"
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Single Input Read from File: 42 * 2 = 84\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "n = 12321\n",
        "temp = n\n",
        "rev = 0\n",
        "\n",
        "while n > 0:\n",
        "    dig = n % 10\n",
        "    rev = rev * 10 + dig\n",
        "    n = n // 10\n",
        "\n",
        "if temp == rev:\n",
        "    print(\"The number is a palindrome.\")\n",
        "else:\n",
        "    print(\"The number is not a palindrome.\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JIU-Vajsup0v",
        "outputId": "26d6b44b-a6a0-412a-f02d-8125ea1e6d40"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "The number is a palindrome.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "maths = 60\n",
        "python = 70\n",
        "chemistry = 80\n",
        "beee = 90\n",
        "english = 85\n",
        "\n",
        "# Calculate total and average\n",
        "total = maths + python + chemistry + beee + english\n",
        "average = total / 5\n",
        "\n",
        "# Print total and average\n",
        "print(\"Total marks:\", total)\n",
        "print(\"Average marks:\", average)\n",
        "\n",
        "# Check if total marks are greater than 50\n",
        "if total > 50:\n",
        "    print(\"The total marks are greater than 50.\")\n",
        "else:\n",
        "    print(\"The total marks are not greater than 50.\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "__SQ2wcOvE1Y",
        "outputId": "c33f9413-8ccd-4dcc-9140-eee2310fc500"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Total marks: 385\n",
            "Average marks: 77.0\n",
            "The total marks are greater than 50.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "a = int(input(\"Enter the number of values: \"))\n",
        "l = []\n",
        "for i in range(a):\n",
        "    l.append(int(input(f\"Enter value {i+1}: \")))\n",
        "print(\"List of values:\", l)\n",
        "total_sum = sum(l)\n",
        "print(\"Sum of values:\", total_sum)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "31oyBLFbvNaB",
        "outputId": "3fac8639-04a6-4347-98e6-2d21cdedff22"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Enter the number of values: 2\n",
            "Enter value 1: 1\n",
            "Enter value 2: 2\n",
            "List of values: [1, 2]\n",
            "Sum of values: 3\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "a=int(input(\"enter the date\"))\n",
        "if a==0:\n",
        "  print(\"sunday\")\n",
        "elif a==1:\n",
        "  print(\"monday\")\n",
        "elif a==2:\n",
        "  print(\"tuesday\")\n",
        "elif a==3:\n",
        "  print(\"wednesday\")\n",
        "elif a==4:\n",
        "  print(\"thursday\")\n",
        "elif a==5:\n",
        "  print(\"friday\")\n",
        "elif a==6:\n",
        "  print(\"saturday\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "cvk28mVTvjmC",
        "outputId": "52420be0-bbb6-493c-8780-20b442110206"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "enter the date3\n",
            "wednesday\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "num=int(input(\"enter the num\"))\n",
        "a=[]\n",
        "for i in str(num):\n",
        "  a.append(i)\n",
        "print(a[0])\n",
        "print(a[-1])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-yAMZ7-yvxW4",
        "outputId": "f9ce5233-1518-487f-d933-5b207e0bd463"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "enter the num122\n",
            "1\n",
            "2\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "string=input(\"enter any string\")\n",
        "revstr=\"\"\n",
        "for i in string:\n",
        "  revstr=i+revstr\n",
        "if (string==revstr):\n",
        "  print(\"palindrome\")\n",
        "else:\n",
        "  print(\"not palindrome\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0Px2ZMsMv-zm",
        "outputId": "d67f61a9-eb88-43f8-a384-a4664bbbed2b"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "enter any string4\n",
            "palindrome\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "a=int(input(\"enter no of terms:\"))\n",
        "n1,n2=0,1\n",
        "count=0\n",
        "for i in range (0,i):\n",
        "  print(n1)\n",
        "  nth=n1+n2\n",
        "  n1=n2\n",
        "  n2=nth\n",
        "  count+=1"
      ],
      "metadata": {
        "id": "sTHQLm6VwLOF"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "num=int(input(\"enter the number\"))\n",
        "factorial=1\n",
        "for i in range(1,num+1):\n",
        "  factorial=factorial*i\n",
        "print(\"the factorial number is: {}\".format(factorial))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "V_WYNF-JwNdt",
        "outputId": "9be9581c-f850-4165-f053-cf8857e39ff6"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "enter the number3\n",
            "the factorial number is: 6\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "num=int(input(\"enter the number\"))\n",
        "sum=0\n",
        "if sum==num:\n",
        " print(\"it is an armstrong\")\n",
        "else:\n",
        "  print(\"it is not an armstrong\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "kM4a9opkwSf1",
        "outputId": "cf452380-6790-4814-9d9e-b12cb2013a89"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "enter the number4\n",
            "it is not an armstrong\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "n=int(input(\"Enter the n value\"))\n",
        "print(\"Printing even numbers between 1 to \",n)\n",
        "for i in range(1,n+1):\n",
        "  if i%2==0:\n",
        "    print(i)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "EAopdS2WwaQl",
        "outputId": "9fabb13c-77c2-452a-e598-5dd545528a25"
      },
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Enter the n value2\n",
            "Printing even numbers between 1 to  2\n",
            "2\n"
          ]
        }
      ]
    }
  ]
}